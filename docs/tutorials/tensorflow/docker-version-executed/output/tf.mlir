module attributes {tf.versions = {bad_consumers = [], min_consumer = 0 : i32, producer = 1882 : i32}} {
  func.func @main(%arg0: tensor<4x32x32x1xf32>) -> tensor<*xf32> attributes {tf.entry_function = {control_outputs = "", inputs = "x1", outputs = "Identity"}} {
    %0 = tf_executor.graph {
      %outputs, %control = tf_executor.island wraps "tf.Const"() <{value = dense<0.000000e+00> : tensor<1xf32>}> {device = ""} : () -> tensor<1xf32>
      %outputs_0, %control_1 = tf_executor.island wraps "tf.Identity"(%outputs) {_has_manual_control_dependencies = true, device = ""} : (tensor<1xf32>) -> tensor<*xf32>
      %outputs_2, %control_3 = tf_executor.island wraps "tf.Const"() <{value = dense<1> : tensor<4xi32>}> {device = ""} : () -> tensor<4xi32>
      %outputs_4, %control_5 = tf_executor.island wraps "tf.Reshape"(%outputs_0, %outputs_2) {device = ""} : (tensor<*xf32>, tensor<4xi32>) -> tensor<*xf32>
      %outputs_6, %control_7 = tf_executor.island wraps "tf.Const"() <{value = dense<[[[[0.187369764]], [[0.317208648]], [[0.24071151]], [[0.31959182]], [[-0.31765911]]], [[[0.00527250767]], [[-0.145045966]], [[-0.340863854]], [[-0.124282777]], [[-0.314932227]]], [[[-0.00279024243]], [[0.128039986]], [[-0.245543063]], [[-0.0257310271]], [[0.0292630196]]], [[[-0.159440607]], [[0.143667936]], [[-0.253523946]], [[-0.0281893313]], [[-0.281862706]]], [[[0.251600742]], [[0.0935258567]], [[-0.346047431]], [[0.0146496892]], [[0.20390445]]]]> : tensor<5x5x1x1xf32>}> {device = ""} : () -> tensor<5x5x1x1xf32>
      %outputs_8, %control_9 = tf_executor.island wraps "tf.Identity"(%outputs_6) {_has_manual_control_dependencies = true, device = ""} : (tensor<5x5x1x1xf32>) -> tensor<*xf32>
      %outputs_10, %control_11 = tf_executor.island wraps "tf.Const"() <{value = dense<0.000000e+00> : tensor<8xf32>}> {device = ""} : () -> tensor<8xf32>
      %outputs_12, %control_13 = tf_executor.island wraps "tf.Identity"(%outputs_10) {_has_manual_control_dependencies = true, device = ""} : (tensor<8xf32>) -> tensor<*xf32>
      %outputs_14, %control_15 = tf_executor.island wraps "tf.Const"() <{value = dense<""> : tensor<256x8xf32>}> {device = ""} : () -> tensor<256x8xf32>
      %outputs_16, %control_17 = tf_executor.island wraps "tf.Identity"(%outputs_14) {_has_manual_control_dependencies = true, device = ""} : (tensor<256x8xf32>) -> tensor<*xf32>
      %outputs_18, %control_19 = tf_executor.island wraps "tf.Const"() <{value = dense<0.000000e+00> : tensor<4xf32>}> {device = ""} : () -> tensor<4xf32>
      %outputs_20, %control_21 = tf_executor.island wraps "tf.Identity"(%outputs_18) {_has_manual_control_dependencies = true, device = ""} : (tensor<4xf32>) -> tensor<*xf32>
      %outputs_22, %control_23 = tf_executor.island wraps "tf.Const"() <{value = dense<[[0.698632538, -0.34189117, -0.422249705, 0.0148819089], [-0.238211125, -0.0309978127, 0.41851598, 0.293587506], [-0.642848312, -0.359199047, -0.678803802, 0.03303653], [-0.698414564, -0.502943397, -0.148357093, 0.129342258], [-0.141768157, -0.148408175, -0.208009869, -2.968030e-01], [6.094020e-01, 8.139920e-02, -0.671867967, -0.303727537], [-0.591796041, -0.388902962, -0.604529262, -0.0494864583], [-0.569168925, 0.389392674, -0.58365041, -0.640111327]]> : tensor<8x4xf32>}> {device = ""} : () -> tensor<8x4xf32>
      %outputs_24, %control_25 = tf_executor.island wraps "tf.Identity"(%outputs_22) {_has_manual_control_dependencies = true, device = ""} : (tensor<8x4xf32>) -> tensor<*xf32>
      %outputs_26, %control_27 = tf_executor.island wraps "tf.Const"() <{value = dense<0.000000e+00> : tensor<2xf32>}> {device = ""} : () -> tensor<2xf32>
      %outputs_28, %control_29 = tf_executor.island wraps "tf.Identity"(%outputs_26) {_has_manual_control_dependencies = true, device = ""} : (tensor<2xf32>) -> tensor<*xf32>
      %outputs_30, %control_31 = tf_executor.island wraps "tf.Const"() <{value = dense<[[-0.980995178, -0.838457584], [0.45938921, 0.0730445384], [-0.741803885, 0.636193752], [0.272650242, 0.155854464]]> : tensor<4x2xf32>}> {device = ""} : () -> tensor<4x2xf32>
      %outputs_32, %control_33 = tf_executor.island wraps "tf.Identity"(%outputs_30) {_has_manual_control_dependencies = true, device = ""} : (tensor<4x2xf32>) -> tensor<*xf32>
      %control_34 = tf_executor.island(%control_9, %control_1, %control_17, %control_13, %control_25, %control_21, %control_33, %control_29) wraps "tf.NoOp"() {_has_manual_control_dependencies = true, device = ""} : () -> ()
      %outputs_35, %control_36 = tf_executor.island wraps "tf.Const"() <{value = dense<[-1, 256]> : tensor<2xi32>}> {device = ""} : () -> tensor<2xi32>
      %outputs_37, %control_38 = tf_executor.island wraps "tf.Conv2D"(%arg0, %outputs_8) <{data_format = "NHWC", dilations = [1, 1, 1, 1], explicit_paddings = [], padding = "SAME", strides = [1, 2, 2, 1], use_cudnn_on_gpu = true}> {device = ""} : (tensor<4x32x32x1xf32>, tensor<*xf32>) -> tensor<*xf32>
      %outputs_39, %control_40 = tf_executor.island wraps "tf.AddV2"(%outputs_37, %outputs_4) {device = ""} : (tensor<*xf32>, tensor<*xf32>) -> tensor<*xf32>
      %outputs_41, %control_42 = tf_executor.island wraps "tf.Relu"(%outputs_39) {device = ""} : (tensor<*xf32>) -> tensor<*xf32>
      %outputs_43, %control_44 = tf_executor.island wraps "tf.Reshape"(%outputs_41, %outputs_35) {device = ""} : (tensor<*xf32>, tensor<2xi32>) -> tensor<*xf32>
      %outputs_45, %control_46 = tf_executor.island wraps "tf.MatMul"(%outputs_43, %outputs_16) <{grad_a = false, grad_b = false, transpose_a = false, transpose_b = false}> {device = ""} : (tensor<*xf32>, tensor<*xf32>) -> tensor<*xf32>
      %outputs_47, %control_48 = tf_executor.island wraps "tf.BiasAdd"(%outputs_45, %outputs_12) <{data_format = "NHWC"}> {device = ""} : (tensor<*xf32>, tensor<*xf32>) -> tensor<*xf32>
      %outputs_49, %control_50 = tf_executor.island wraps "tf.Relu"(%outputs_47) {device = ""} : (tensor<*xf32>) -> tensor<*xf32>
      %outputs_51, %control_52 = tf_executor.island wraps "tf.MatMul"(%outputs_49, %outputs_24) <{grad_a = false, grad_b = false, transpose_a = false, transpose_b = false}> {device = ""} : (tensor<*xf32>, tensor<*xf32>) -> tensor<*xf32>
      %outputs_53, %control_54 = tf_executor.island wraps "tf.BiasAdd"(%outputs_51, %outputs_20) <{data_format = "NHWC"}> {device = ""} : (tensor<*xf32>, tensor<*xf32>) -> tensor<*xf32>
      %outputs_55, %control_56 = tf_executor.island wraps "tf.Relu"(%outputs_53) {device = ""} : (tensor<*xf32>) -> tensor<*xf32>
      %outputs_57, %control_58 = tf_executor.island wraps "tf.MatMul"(%outputs_55, %outputs_32) <{grad_a = false, grad_b = false, transpose_a = false, transpose_b = false}> {device = ""} : (tensor<*xf32>, tensor<*xf32>) -> tensor<*xf32>
      %outputs_59, %control_60 = tf_executor.island wraps "tf.BiasAdd"(%outputs_57, %outputs_28) <{data_format = "NHWC"}> {device = ""} : (tensor<*xf32>, tensor<*xf32>) -> tensor<*xf32>
      %outputs_61, %control_62 = tf_executor.island wraps "tf.Softmax"(%outputs_59) {device = ""} : (tensor<*xf32>) -> tensor<*xf32>
      %outputs_63, %control_64 = tf_executor.island(%control_34) wraps "tf.Identity"(%outputs_61) {device = ""} : (tensor<*xf32>) -> tensor<*xf32>
      tf_executor.fetch %outputs_63 : tensor<*xf32>
    }
    return %0 : tensor<*xf32>
  }
}
