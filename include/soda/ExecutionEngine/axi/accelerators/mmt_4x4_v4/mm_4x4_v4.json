{
    "name": "MM_4x4_v4",
    "version": "1.0",
    "description": "MM Accelerator",
    "memory_layout": {
        "#A_Buffer": {
            "size": 4096,
            "data_type": "int32"
        },
        "#B_Buffer": {
            "size": 4096,
            "data_type": "int32"
        },
        "#C_Buffer": {
            "size": 4096,
            "data_type": "int32"
        }
    },
    "dma_fifo": {
        "din": {
            "id": "0",
            "data_type": "int32",
            "read": true,
            "write": false
        },
        "dout": {
            "id": "1",
            "data_type": "int32",
            "read": false,
            "write": true
        }
    },
    "kernels": {
        "4x4_MM": {
            "id": 0,
            "description": "4x4 matrix multiplication",
            "compute": "C += A * B",
            "tile_info": {
                "tile_dims": {
                    "#tile_N": 4,
                    "#tile_M": 4,
                    "#tile_K": 4
                },
                "A": {
                    "associated_buffer": "#A_Buffer",
                    "read": true,
                    "write": false,
                    "default_offset": 0,
                    "shape": [
                        "#tile_N",
                        "#tile_K"
                    ]
                },
                "B": {
                    "associated_buffer": "#B_Buffer",
                    "read": true,
                    "write": false,
                    "default_offset": 0,
                    "shape": [
                        "#tile_M",
                        "#tile_K"
                    ],
                    "stationary": true
                },
                "C": {
                    "associated_buffer": "#C_Buffer",
                    "read": true,
                    "write": true,
                    "default_offset": 0,
                    "shape": [
                        "#tile_N",
                        "#tile_M"
                    ]
                }
            }
        }
    },
    "ISA": {
        "instruction_format": {
            "opcode_length": 32,
            "op_extension": 64
        },
        "opcodes": {
            "-": [],
            "0": [],
            "1": [
                {
                    "READ": {
                        "dma_fifo_id": 0,
                        "buffer": "#A_Buffer",
                        "offset": 0,
                        "length": "#N * #K"
                    }
                }
            ],
            "2": [
                {
                    "READ": {
                        "dma_fifo_id": 0,
                        "buffer": "#B_Buffer",
                        "offset": 0,
                        "length": "#M * #K"
                    }
                }
            ],
            "3": [
                {
                    "READ": {
                        "dma_fifo_id": 0,
                        "buffer": "#A_Buffer",
                        "offset": 0,
                        "length": "#N * #K"
                    }
                },
                {
                    "READ": {
                        "dma_fifo_id": 0,
                        "buffer": "#B_Buffer",
                        "offset": 0,
                        "length": "#M * #K"
                    }
                }
            ],
            "4": [
                {
                    "COMPUTE": {
                        "kernel_id": 0
                    }
                }
            ],
            "5": [
                {
                    "READ": {
                        "dma_fifo_id": 0,
                        "buffer": "#A_Buffer",
                        "offset": 0,
                        "length": "#N * #K"
                    }
                },
                {
                    "COMPUTE": {
                        "kernel_id": 0
                    }
                }
            ],
            "6": [
                {
                    "READ": {
                        "dma_fifo_id": 0,
                        "buffer": "#B_Buffer",
                        "offset": 0,
                        "length": "#M * #K"
                    }
                },
                {
                    "COMPUTE": {
                        "kernel_id": 0
                    }
                }
            ],
            "7": [
                {
                    "READ": {
                        "dma_fifo_id": 0,
                        "buffer": "#A_Buffer",
                        "offset": 0,
                        "length": "#N * #K"
                    }
                },
                {
                    "READ": {
                        "dma_fifo_id": 0,
                        "buffer": "#B_Buffer",
                        "offset": 0,
                        "length": "#M * #K"
                    }
                },
                {
                    "COMPUTE": {
                        "kernel_id": 0
                    }
                }
            ],
            "8": [
                {
                    "SEND": {
                        "dma_fifo_id": 1,
                        "buffer": "#C_Buffer",
                        "offset": 0,
                        "length": "#N * #M"
                    }
                }
            ],
            "9": [
                {
                    "READ": {
                        "dma_fifo_id": 0,
                        "buffer": "#A_Buffer",
                        "offset": 0,
                        "length": "#N * #K"
                    }
                },
                {
                    "SEND": {
                        "dma_fifo_id": 1,
                        "buffer": "#C_Buffer",
                        "offset": 0,
                        "length": "#N * #M"
                    }
                }
            ],
            "10": [
                {
                    "READ": {
                        "dma_fifo_id": 0,
                        "buffer": "#B_Buffer",
                        "offset": 0,
                        "length": "#M * #K"
                    }
                },
                {
                    "SEND": {
                        "dma_fifo_id": 1,
                        "buffer": "#C_Buffer",
                        "offset": 0,
                        "length": "#N * #M"
                    }
                }
            ],
            "11": [
                {
                    "READ": {
                        "dma_fifo_id": 0,
                        "buffer": "#A_Buffer",
                        "offset": 0,
                        "length": "#N * #K"
                    }
                },
                {
                    "READ": {
                        "dma_fifo_id": 0,
                        "buffer": "#B_Buffer",
                        "offset": 0,
                        "length": "#M * #K"
                    }
                },
                {
                    "SEND": {
                        "dma_fifo_id": 1,
                        "buffer": "#C_Buffer",
                        "offset": 0,
                        "length": "#N * #M"
                    }
                }
            ],
            "12": [
                {
                    "COMPUTE": {
                        "kernel_id": 0
                    }
                },
                {
                    "SEND": {
                        "dma_fifo_id": 1,
                        "buffer": "#C_Buffer",
                        "offset": 0,
                        "length": "#N * #M"
                    }
                }
            ],
            "13": [
                {
                    "READ": {
                        "dma_fifo_id": 0,
                        "buffer": "#A_Buffer",
                        "offset": 0,
                        "length": "#N * #K"
                    }
                },
                {
                    "COMPUTE": {
                        "kernel_id": 0
                    }
                },
                {
                    "SEND": {
                        "dma_fifo_id": 1,
                        "buffer": "#C_Buffer",
                        "offset": 0,
                        "length": "#N * #M"
                    }
                }
            ],
            "14": [
                {
                    "READ": {
                        "dma_fifo_id": 0,
                        "buffer": "#B_Buffer",
                        "offset": 0,
                        "length": "#M * #K"
                    }
                },
                {
                    "COMPUTE": {
                        "kernel_id": 0
                    }
                },
                {
                    "SEND": {
                        "dma_fifo_id": 1,
                        "buffer": "#C_Buffer",
                        "offset": 0,
                        "length": "#N * #M"
                    }
                }
            ],
            "15": [
                {
                    "READ": {
                        "dma_fifo_id": 0,
                        "buffer": "#A_Buffer",
                        "offset": 0,
                        "length": "#N * #K"
                    }
                },
                {
                    "READ": {
                        "dma_fifo_id": 0,
                        "buffer": "#B_Buffer",
                        "offset": 0,
                        "length": "#M * #K"
                    }
                },
                {
                    "COMPUTE": {
                        "kernel_id": 0
                    }
                },
                {
                    "SEND": {
                        "dma_fifo_id": 1,
                        "buffer": "#C_Buffer",
                        "offset": 0,
                        "length": "#N * #M"
                    }
                }
            ]
        },
        "op_arg": {
            "0-15": "#N",
            "16-31": "#M",
            "31-63": "#K"
        }
    },
    "schedule": {
        "allowed_patterns": [
            "R#a, R#b, C, S#c",
            "a"
        ]
    }
}